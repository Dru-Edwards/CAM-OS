apiVersion: v1
kind: Namespace
metadata:
  name: cam-os-system
  labels:
    name: cam-os-system
    app.kubernetes.io/name: cam-os-operator
    app.kubernetes.io/component: operator
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: camkernels.cam-os.dev
  labels:
    app.kubernetes.io/name: cam-os-operator
spec:
  group: cam-os.dev
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              version:
                type: string
                default: "1.1.0"
              replicas:
                type: integer
                default: 3
              resources:
                type: object
                properties:
                  requests:
                    type: object
                    properties:
                      cpu:
                        type: string
                        default: "500m"
                      memory:
                        type: string
                        default: "1Gi"
                  limits:
                    type: object
                    properties:
                      cpu:
                        type: string
                        default: "2000m"
                      memory:
                        type: string
                        default: "4Gi"
              redis:
                type: object
                properties:
                  enabled:
                    type: boolean
                    default: true
                  storageClass:
                    type: string
                    default: "standard"
                  size:
                    type: string
                    default: "10Gi"
              monitoring:
                type: object
                properties:
                  enabled:
                    type: boolean
                    default: true
                  prometheus:
                    type: boolean
                    default: true
                  grafana:
                    type: boolean
                    default: true
              security:
                type: object
                properties:
                  postQuantum:
                    type: boolean
                    default: true
                  tls:
                    type: boolean
                    default: true
                  rbac:
                    type: boolean
                    default: true
              marketplace:
                type: object
                properties:
                  enabled:
                    type: boolean
                    default: true
                  url:
                    type: string
                    default: "https://marketplace.cam-os.dev"
              federation:
                type: object
                properties:
                  enabled:
                    type: boolean
                    default: false
                  clusters:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        endpoint:
                          type: string
                        region:
                          type: string
          status:
            type: object
            properties:
              phase:
                type: string
                enum: ["Pending", "Installing", "Running", "Upgrading", "Failed"]
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                    lastTransitionTime:
                      type: string
                      format: date-time
                    reason:
                      type: string
                    message:
                      type: string
              kernelVersion:
                type: string
              readyReplicas:
                type: integer
              observedGeneration:
                type: integer
    subresources:
      status: {}
      scale:
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.readyReplicas
  scope: Namespaced
  names:
    plural: camkernels
    singular: camkernel
    kind: CAMKernel
    shortNames:
    - cam
    - kernel
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-os-operator
  namespace: cam-os-system
  labels:
    app.kubernetes.io/name: cam-os-operator
    app.kubernetes.io/component: operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cam-os-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cam-os-operator
    spec:
      serviceAccountName: cam-os-operator
      containers:
      - name: operator
        image: cam-os/operator:v1.1.0
        ports:
        - containerPort: 8080
          name: metrics
        - containerPort: 9443
          name: webhook
        env:
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: "cam-os-operator"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: webhook-certs
          mountPath: /tmp/k8s-webhook-server/serving-certs
          readOnly: true
      volumes:
      - name: webhook-certs
        secret:
          secretName: cam-os-operator-webhook-certs
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cam-os-operator
  namespace: cam-os-system
  labels:
    app.kubernetes.io/name: cam-os-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cam-os-operator
  labels:
    app.kubernetes.io/name: cam-os-operator
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "persistentvolumeclaims", "events", "configmaps", "secrets"]
  verbs: ["*"]
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
  verbs: ["*"]
- apiGroups: ["monitoring.coreos.com"]
  resources: ["servicemonitors"]
  verbs: ["get", "create"]
- apiGroups: ["cam-os.dev"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses", "networkpolicies"]
  verbs: ["*"]
- apiGroups: ["policy"]
  resources: ["podsecuritypolicies"]
  verbs: ["use"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cam-os-operator
  labels:
    app.kubernetes.io/name: cam-os-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cam-os-operator
subjects:
- kind: ServiceAccount
  name: cam-os-operator
  namespace: cam-os-system
---
apiVersion: v1
kind: Service
metadata:
  name: cam-os-operator-metrics
  namespace: cam-os-system
  labels:
    app.kubernetes.io/name: cam-os-operator
spec:
  ports:
  - name: metrics
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: cam-os-operator
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cam-os-operator-config
  namespace: cam-os-system
  labels:
    app.kubernetes.io/name: cam-os-operator
data:
  config.yaml: |
    operator:
      name: cam-os-operator
      namespace: cam-os-system
      leaderElection: true
      metricsBindAddress: ":8080"
      healthProbeBindAddress: ":8081"
    
    kernel:
      image: cam-os/kernel:v1.1.0
      imagePullPolicy: IfNotPresent
      resources:
        requests:
          cpu: 500m
          memory: 1Gi
        limits:
          cpu: 2000m
          memory: 4Gi
    
    redis:
      image: redis:7-alpine
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 500m
          memory: 512Mi
    
    monitoring:
      prometheus:
        enabled: true
        serviceMonitor: true
      grafana:
        enabled: true
        dashboards: true
    
    marketplace:
      url: "https://marketplace.cam-os.dev"
      syncInterval: "24h"
      trustedPublishers:
        - "cam-os-team"
        - "verified-publishers"
    
    federation:
      enabled: false
      syncInterval: "30s"
      conflictResolution: "last-write-wins" 