apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: cam-system
type: Opaque
data:
  POSTGRES_PASSWORD: Y2FtX3Bhc3N3b3Jk # base64 encoded "cam_password"
  POSTGRES_USER: Y2FtX3VzZXI= # base64 encoded "cam_user"
  POSTGRES_DB: Y2FtX2Ri # base64 encoded "cam_db"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: cam-system
data:
  postgresql.conf: |
    # PostgreSQL production configuration
    max_connections = 200
    shared_buffers = 256MB
    effective_cache_size = 1GB
    maintenance_work_mem = 64MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    work_mem = 4MB
    min_wal_size = 1GB
    max_wal_size = 4GB
    max_worker_processes = 8
    max_parallel_workers_per_gather = 4
    max_parallel_workers = 8
    max_parallel_maintenance_workers = 4
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cam-postgres
  namespace: cam-system
  labels:
    app: cam-postgres
spec:
  serviceName: cam-postgres-service
  replicas: 1
  selector:
    matchLabels:
      app: cam-postgres
  template:
    metadata:
      labels:
        app: cam-postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        envFrom:
        - secretRef:
            name: postgres-secret
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-config
          mountPath: /etc/postgresql
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - cam_user
            - -d
            - cam_db
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - cam_user
            - -d
            - cam_db
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 999
      volumes:
      - name: postgres-config
        configMap:
          name: postgres-config
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 50Gi
---
apiVersion: v1
kind: Service
metadata:
  name: cam-postgres-service
  namespace: cam-system
  labels:
    app: cam-postgres
spec:
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  selector:
    app: cam-postgres
  type: ClusterIP
