apiVersion: v1
kind: Secret
metadata:
  name: {{ include "cam-chart.fullname" . }}-secret
  labels:
    {{- include "cam-chart.labels" . | nindent 4 }}
type: Opaque
data:
  {{- if .Values.postgresql.enabled }}
  # Database Connection String
  database-url: {{ printf "postgresql://%s:%s@%s:%d/%s" .Values.postgresql.auth.username .Values.postgresql.auth.password .Values.postgresql.primary.service.name (.Values.postgresql.primary.service.ports.postgresql | int) .Values.postgresql.auth.database | b64enc }}
  
  # Database Credentials
  database-username: {{ .Values.postgresql.auth.username | b64enc }}
  database-password: {{ .Values.postgresql.auth.password | b64enc }}
  database-name: {{ .Values.postgresql.auth.database | b64enc }}
  {{- end }}
  
  {{- if .Values.redis.enabled }}
  # Redis Connection String
  redis-url: {{ printf "redis://:%s@%s:%d" .Values.redis.auth.password .Values.redis.master.service.name (.Values.redis.master.service.ports.redis | int) | b64enc }}
  
  # Redis Credentials
  redis-password: {{ .Values.redis.auth.password | b64enc }}
  {{- end }}
  
  # JWT Secret
  jwt-secret: {{ .Values.security.jwt.secret | b64enc }}
  
  # Encryption Keys
  encryption-key: {{ .Values.security.encryption.key | b64enc }}
  signing-key: {{ .Values.security.signing.key | b64enc }}
  
  # API Keys
  {{- if .Values.integrations.openai.enabled }}
  openai-api-key: {{ .Values.integrations.openai.apiKey | b64enc }}
  {{- end }}
  
  {{- if .Values.integrations.anthropic.enabled }}
  anthropic-api-key: {{ .Values.integrations.anthropic.apiKey | b64enc }}
  {{- end }}
  
  {{- if .Values.integrations.google.enabled }}
  google-api-key: {{ .Values.integrations.google.apiKey | b64enc }}
  {{- end }}
  
  # External Service Credentials
  {{- if .Values.external.webhook.enabled }}
  webhook-secret: {{ .Values.external.webhook.secret | b64enc }}
  {{- end }}
  
  {{- if .Values.external.smtp.enabled }}
  smtp-username: {{ .Values.external.smtp.username | b64enc }}
  smtp-password: {{ .Values.external.smtp.password | b64enc }}
  {{- end }}
  
  # Custom Secrets
  {{- range $key, $value := .Values.secrets }}
  {{ $key }}: {{ $value | b64enc }}
  {{- end }}
  
  # TLS Certificates (if provided)
  {{- if .Values.tls.enabled }}
  {{- if .Values.tls.cert }}
  tls.crt: {{ .Values.tls.cert | b64enc }}
  {{- end }}
  {{- if .Values.tls.key }}
  tls.key: {{ .Values.tls.key | b64enc }}
  {{- end }}
  {{- if .Values.tls.ca }}
  ca.crt: {{ .Values.tls.ca | b64enc }}
  {{- end }}
  {{- end }}
---
{{- if .Values.tls.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "cam-chart.fullname" . }}-tls
  labels:
    {{- include "cam-chart.labels" . | nindent 4 }}
type: kubernetes.io/tls
data:
  tls.crt: {{ .Values.tls.cert | b64enc }}
  tls.key: {{ .Values.tls.key | b64enc }}
{{- end }}
---
{{- if .Values.imagePullSecrets }}
{{- range .Values.imagePullSecrets }}
{{- if .create }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .name }}
  labels:
    {{- include "cam-chart.labels" $ | nindent 4 }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ printf "{\"auths\":{\"%s\":{\"username\":\"%s\",\"password\":\"%s\",\"auth\":\"%s\"}}}" .registry .username .password (printf "%s:%s" .username .password | b64enc) | b64enc }}
---
{{- end }}
{{- end }}
{{- end }}
